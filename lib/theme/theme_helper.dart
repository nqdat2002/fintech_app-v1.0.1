import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray5001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray30004,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(13.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray10008,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.lightBlueA700,
          fontSize: 17.fSize,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray800.withOpacity(0.6),
          fontSize: 13.fSize,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray800.withOpacity(0.39),
          fontSize: 12.fSize,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray90004,
          fontSize: 41.fSize,
          fontFamily: 'General Sans Variable',
          fontWeight: FontWeight.w500,
        ),
        displaySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 34.fSize,
          fontFamily: 'Satoshi Variable',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 28.fSize,
          fontFamily: 'Satoshi Variable',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.errorContainer.withOpacity(1),
          fontSize: 24.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray900.withOpacity(0.56),
          fontSize: 13.fSize,
          fontFamily: 'General Sans Variable',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray60001,
          fontSize: 10.fSize,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.gray500,
          fontSize: 9.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 22.fSize,
          fontFamily: 'Satoshi Variable',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray90002,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90002,
          fontSize: 15.fSize,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF2B6173),
    primaryContainer: Color(0X8715131F),
    secondaryContainer: Color(0X422B6173),

    // Error colors
    errorContainer: Color(0X99004852),
    onError: Color(0XFF256981),
    onErrorContainer: Color(0XA2FFFFFF),

    // On colors(text colors)
    onPrimary: Color(0XFF050C0E),
    onPrimaryContainer: Color(0XFF3195F9),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA400 => Color(0XFFFFCC00);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue300 => Color(0XFF5FA8EE);
  Color get blue900 => Color(0XFF003399);
  Color get blueA700 => Color(0XFF0065FF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray10001 => Color(0XFFCECECE);
  Color get blueGray10002 => Color(0XFFD6DADB);
  Color get blueGray10003 => Color(0XFFD1D1D6);
  Color get blueGray200 => Color(0XFFB8BCC5);
  Color get blueGray20001 => Color(0XFFB8C4C9);
  Color get blueGray20026 => Color(0X26A7AEB5);
  Color get blueGray300 => Color(0XFF94A4AB);
  Color get blueGray30001 => Color(0XFF9CA2AA);
  Color get blueGray30002 => Color(0XFFA4ADB0);
  Color get blueGray30003 => Color(0XFF9CA4AB);
  Color get blueGray400 => Color(0XFF8E8E8E);
  Color get blueGray40001 => Color(0XFF808C91);
  Color get blueGray50 => Color(0XFFECEDF2);
  Color get blueGray600 => Color(0XFF576B73);
  Color get blueGray60001 => Color(0XFF2B7979);
  Color get blueGray800 => Color(0XFF265565);
  Color get blueGray900 => Color(0XFF132F38);
  Color get blueGray90001 => Color(0XFF2E3137);
  Color get blueGray90002 => Color(0XFF1F2C37);
  Color get blueGray90003 => Color(0XFF282F3E);

  // BlueGrayf
  Color get blueGray1003f => Color(0X3FD6DCE1);
  Color get blueGray1003f01 => Color(0X3FD2D2D2);
  Color get blueGray1003f02 => Color(0X3FD4D4D4);

  // BlueGraye
  Color get blueGray1007e => Color(0X7ED6D6D6);

  // BlueGrayEd
  Color get blueGray200Ed => Color(0XEDAABEDA);
  Color get blueGray200Ed01 => Color(0XEDB1C1D6);

  // BlueGraya
  Color get blueGray3000a => Color(0X0A9BA3AF);

  // Cyan
  Color get cyan10066 => Color(0X66A6DFF2);
  Color get cyan200 => Color(0XFF82CBE3);
  Color get cyan900 => Color(0XFF0A6375);
  Color get cyan90001 => Color(0XFF035D7C);
  Color get cyan90026 => Color(0X26096375);
  Color get cyanA200 => Color(0XFF00FFE4);
  Color get cyanA20001 => Color(0XFF00FFFF);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFFDE5E5);
  Color get deepOrangeA400 => Color(0XFFFF170A);

  // DeepPurple
  Color get deepPurple100 => Color(0XFFDECAFF);
  Color get deepPurpleA100 => Color(0XFFAB92F0);

  // Gray
  Color get gray100 => Color(0XFFF3F4F6);
  Color get gray10001 => Color(0XFFF3F4F5);
  Color get gray10002 => Color(0XFFF1F2F4);
  Color get gray10003 => Color(0XFFF2F4F5);
  Color get gray10004 => Color(0XFFF1F3F4);
  Color get gray10005 => Color(0XFFF4F7F8);
  Color get gray10006 => Color(0XFFF3F5F5);
  Color get gray10007 => Color(0XFFF5F5F7);
  Color get gray10008 => Color(0XFFF2F2F5);
  Color get gray10009 => Color(0XFFF2F2F7);
  Color get gray200 => Color(0XFFEDEDED);
  Color get gray20001 => Color(0XFFECECEC);
  Color get gray20002 => Color(0XFFF0F0F0);
  Color get gray20003 => Color(0XFFE7EAEB);
  Color get gray20004 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE4E4E4);
  Color get gray30001 => Color(0XFFE0E0E0);
  Color get gray30002 => Color(0XFFDFE4E6);
  Color get gray30003 => Color(0XFFE6E6E6);
  Color get gray30004 => Color(0XFFE1E1E1);
  Color get gray30005 => Color(0XFFDDDDDD);
  Color get gray30006 => Color(0XFFD9E9E8);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray40026 => Color(0X26BDBDBD);
  Color get gray40087 => Color(0X87C6C6C6);
  Color get gray50 => Color(0XFFFCFCFC);
  Color get gray500 => Color(0XFF8F92A1);
  Color get gray50001 => Color(0XFFA1A0A8);
  Color get gray50002 => Color(0XFF949494);
  Color get gray50038 => Color(0X38959595);
  Color get gray5001 => Color(0XFFF9FAFA);
  Color get gray5002 => Color(0XFFF9FBF9);
  Color get gray5003 => Color(0XFFFBFCFC);
  Color get gray5004 => Color(0XFFF7FBFF);
  Color get gray600 => Color(0XFF787880);
  Color get gray60001 => Color(0XFF6B7280);
  Color get gray700 => Color(0XFF646464);
  Color get gray70001 => Color(0XFF676767);
  Color get gray70019 => Color(0X195A5A5A);
  Color get gray800 => Color(0XFF3C3C43);
  Color get gray900 => Color(0XFF272727);
  Color get gray90001 => Color(0XFF0F172A);
  Color get gray90002 => Color(0XFF111827);
  Color get gray90003 => Color(0XFF1E1E1E);
  Color get gray90004 => Color(0XFF10242B);
  Color get gray90005 => Color(0XFF0C1D23);
  Color get gray90006 => Color(0XFF0B202B);
  Color get gray90007 => Color(0XFF00252A);
  Color get gray90008 => Color(0XFF282828);
  Color get gray90009 => Color(0XFF1C1C1C);

  // GrayB
  Color get gray100B2 => Color(0XB2F5F5F5);

  // GrayE
  Color get gray100E5 => Color(0XE5F2F2F2);

  // Grayf
  Color get gray2003f => Color(0X3FE9E9E9);
  Color get gray4003f => Color(0X3FB8B8B8);
  Color get gray4003f01 => Color(0X3FC5C5C5);
  Color get gray4003f02 => Color(0X3FB2B2B2);
  Color get gray4003f03 => Color(0X3FC9C9C9);
  Color get gray4003f04 => Color(0X3FC7C7C7);
  Color get gray5003f => Color(0X3F979797);
  Color get gray6000f => Color(0X0F6B727F);
  Color get gray7007f => Color(0X7F585858);

  // GrayEf
  Color get gray300Ef => Color(0XEFDBDBDB);
  Color get gray50Ef => Color(0XEFFAFAFA);

  // Grayc
  Color get gray4000c => Color(0X0CB2B6B9);

  // GrayD
  Color get gray50D6 => Color(0XD6F9F9F9);

  // Graye
  Color get gray6001e => Color(0X1E767680);

  // Green
  Color get green500 => Color(0XFF34C759);

  // GreenAd
  Color get greenA2003d => Color(0X3D5FD890);

  // Indigof
  Color get indigo1003f => Color(0X3FC6CEE3);

  // Indigo
  Color get indigo400 => Color(0XFF5856D6);
  Color get indigo5099 => Color(0X99EBEBF5);
  Color get indigo900 => Color(0XFF1E357A);
  Color get indigoA200 => Color(0XFF6A6FF4);
  Color get indigoA400 => Color(0XFF4263EB);

  // LightBluef
  Color get lightBlue1003f => Color(0X3FBCEAF9);

  // LightBlue
  Color get lightBlue300 => Color(0XFF59C3FF);
  Color get lightBlueA400 => Color(0XFF00B7FF);
  Color get lightBlueA700 => Color(0XFF007AFF);
  Color get lightBlueA70001 => Color(0XFF0093FF);

  // Lime
  Color get lime300 => Color(0XFFE6F46A);
  Color get lime30001 => Color(0XFFE8F569);

  // Orange
  Color get orange300 => Color(0XFFFFAE58);
  Color get orange500 => Color(0XFFFD9909);
  Color get orange50001 => Color(0XFFFF9500);
  Color get orangeA200 => Color(0XFFFB923C);

  // Pink
  Color get pink100 => Color(0XFFFFB9E8);

  // Purple
  Color get purple50 => Color(0XFFF3DBFF);
  Color get purple700 => Color(0XFF89207E);
  Color get purpleA200 => Color(0XFFD55DFF);

  // Red
  Color get red100 => Color(0XFFFFD0D0);
  Color get red400 => Color(0XFFF65454);
  Color get red500 => Color(0XFFFF3B30);
  Color get red50001 => Color(0XFFFF3C3C);
  Color get red700 => Color(0XFFD52B1E);
  Color get red70001 => Color(0XFFE31D1C);
  Color get red800 => Color(0XFFC8102E);
  Color get redA700 => Color(0XFFD80027);
  Color get redA70001 => Color(0XFFF50100);
  Color get redA70002 => Color(0XFFFF0000);

  // Teal
  Color get teal100 => Color(0XFFB3D3D1);
  Color get teal300 => Color(0XFF4CA0BC);
  Color get teal30001 => Color(0XFF37B2A5);
  Color get teal400 => Color(0XFF2791B4);
  Color get teal40001 => Color(0XFF2494B7);
  Color get teal40002 => Color(0XFF278FB1);
  Color get teal50 => Color(0XFFE5F1F5);
  Color get teal5001 => Color(0XFFD4EAEF);
  Color get teal5002 => Color(0XFFE3EAED);
  Color get teal5003 => Color(0XFFCDEBF5);
  Color get teal600 => Color(0XFF21897E);
  Color get teal800 => Color(0XFF186A5D);
  Color get teal900 => Color(0XFF004751);
  Color get teal90001 => Color(0XFF124555);
  Color get teal90002 => Color(0XFF004049);
  Color get teal90087 => Color(0X87024B54);
  Color get tealA200 => Color(0XFF69F5EC);
  Color get tealA20001 => Color(0XFF56FFED);
  Color get tealA400 => Color(0XFF00FFC1);

  // Tealb
  Color get teal6002b => Color(0X2B20897D);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
